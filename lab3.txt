
***************
Создание таблиц
***************

CREATE TABLE roles
(
	Id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
	Name VARCHAR (30) UNIQUE NOT NULL
);
------------------
CREATE TABLE users
(
	Id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
	Name VARCHAR (20) NOT NULL,
	Email VARCHAR (100) UNIQUE NOT NULL,
	Phone VARCHAR (50) UNIQUE NOT NULL,
	Password VARCHAR (100) NOT NULL,
	Role_id INTEGER REFERENCES roles (Id)
);
------------------
CREATE TABLE journals
(
	Id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
	FOREIGN KEY (User_id) REFERENCES users (Id)
	Action VARCHAR (50) NOT NULL,
	Date TIMESTAMP NOT NULL
	CONSTRAINT journals_user_id_fk
	FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE;
);
------------------
CREATE TABLE categories
(
	Id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
	Name VARCHAR (30) UNIQUE NOT NULL,
	Cost INTEGER NOT NULL
);
------------------
CREATE TABLE reviews
(
	Id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
	User_id INTEGER REFERENCES users (Id),
	Text VARCHAR (200),
	Rate INTEGER NOT NULL
	CONSTRAINT reviews_user_id_fk 
	FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE;
);
------------------
CREATE TABLE rooms
(
	Id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
	Number INTEGER UNIQUE NOT NULL,
	Category_id INTEGER REFERENCES categories (Id),
	Status VARCHAR (50) NOT NULL,
	Capacity INTEGER NOT NULL
);
------------------
CREATE TABLE payment_ways
(
	Id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
	Name VARCHAR (50) NOT NULL
);
------------------
CREATE TABLE promos
(
	Id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
	Code VARCHAR (20) UNIQUE NOT NULL,
	Discount INTEGER NOT NULL,
	Description VARCHAR (200) NOT NULL,
	Until_date DATE NOT NULL
);
------------------
CREATE TABLE reservations
(
	Id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
	User_id INTEGER REFERENCES users (Id),
	Room_id INTEGER REFERENCES rooms (Id),
	In_date TIMESTAMP NOT NULL,
	Out_date TIMESTAMP NOT NULL,
	Sum INTEGER NOT NULL,
	Promo_id INTEGER REFERENCES promos (Id),
	Payment_way_id INTEGER REFERENCES payment_ways (Id)
	CONSTRAINT user_id_fk 
	FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE SET NULL;
);
------------------
CREATE TABLE services
(
	Id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
	Name VARCHAR (50) UNIQUE NOT NULL,
	Cost INTEGER NOT NULL
);
------------------
CREATE TABLE reservations_services
(
	Reservation_id INTEGER REFERENCES reservations (Id),
	Service_id INTEGER REFERENCES services (Id),
	CONSTRAINT Reservations_services_pk  PRIMARY KEY (Reservation_id, Service_id)
);

********************
Инициализация данных
********************

-- Заполнение таблицы ролей
INSERT INTO roles (name)
VALUES('Client'), ('Admin');

-- Заполнение таблицы пользователей
INSERT INTO users (name, email, phone, password, role_id)
VALUES ('John', 'john@gmail.com', '375441112222', 'john1234', 1),
('Adam', 'adam@mail.ru', '375442221111', 'adam1234', 1),
('Admin', 'admin@hotel.com', '375447771234', 'admin', 2);

-- Заполнение таблицы журналов
INSERT INTO journals (user_id, action, date)
VALUES (1, 'Объект создан', NOW());

-- Заполнение таблицы категорий
INSERT INTO categories (name, cost) VALUES
('standart', 10),
('medium', 20),
('lux', 30),
('premium', 40);

-- Заполнение таблицы отзывов
INSERT INTO reviews (user_id, text, rate) VALUES
(1, 'В этот раз было хорошо', 5),
(1, 'В этот раз было удовлетворительно', 4),
(2, 'В этот раз было ужасно', 1);

-- Заполнение таблицы номеров
INSERT INTO rooms (number, category_id, status, capacity) VALUES
(1, 1, 'Свободен', 2),
(2, 2, 'Свободен', 3),
(3, 3, 'Занят', 2);

-- Заполнение таблицы способов оплаты
INSERT INTO payment_ways (name) VALUES
('Банковский перевод'),
('Наличные'),
('Кредитная карта'),
('PayPal');

-- Заполнение таблицы промокодов
INSERT INTO promos (code, discount, description, until_date) VALUES
('First', 15, 'Для первого гостя', '31-12-2024'),
('Second', 10, 'Для второго гостя', '31-12-2024'),
('Third', 5, 'Для третьего гостя', '31-12-2024');

-- Заполнение таблицы броней
INSERT INTO reservations (user_id, room_id, in_date, out_date, sum, promo_id, payment_way_id) VALUES
(1, 1, '17-11-2024', '18-11-2024', 10, NULL, 1),
(2, 2, '17-11-2024', '18-11-2024', 20, 1, 2);

-- Заполнение таблицы услуг
INSERT INTO services (name, cost) VALUES
('Завтрак', 5),
('Уборка', 5);

-- Заполнение таблицы брони-услуги
INSERT INTO reservations_services (reservation_id, service_id) VALUES
(1, 1),
(1, 2),
(2, 2);

*************************
Создание данных (INSERT)
*************************

-- Добавление пользователя
INSERT INTO users (name, email, phone, password, role_id) VALUES
('John', 'john@gmail.com', '375441112222', 'john1234', 1);

-- Добавление роли
INSERT INTO roles (name) VALUES
('Client');

-- Добавление журнала
INSERT INTO journals (user_id, action, date) VALUES
(1, 'Объект создан', NOW());

-- Добавление категории
INSERT INTO categories (name, cost) VALUES
('standart', 10);

-- Добавление отзыва
INSERT INTO reviews (user_id, text, rate) VALUES
(1, 'В этот раз было хорошо', 5);

-- Добавление номера
INSERT INTO rooms (number, category_id, status, capacity) VALUES
(1, 1, 'Свободен', 2);

-- Добавление способа оплаты
INSERT INTO payment_ways (name) VALUES
('Банковский перевод');

-- Добавление промокода
INSERT INTO promos (code, discount, description, until_date) VALUES
('First', 15, 'Для первого гостя', '31-12-2024');

-- Добавление брони
INSERT INTO reservations (user_id, room_id, in_date, out_date, sum, promo_id, payment_way_id) VALUES
(1, 1, '17-11-2024', '18-11-2024', 10, NULL, 1);

-- Добавление услуги
INSERT INTO services (name, cost) VALUES
('Завтрак', 5);

*************************
Чтение данных (SELECT)
*************************

-- Получение всех пользователей
SELECT * FROM users;

-- Получение всех номеров по указанной категории
SELECT * FROM rooms WHERE category_id = 1;

-- Получение всех броней пользователя
SELECT * FROM reservations WHERE user_id = 1;

-- Получение всех броней с указанной услугой
SELECT * FROM reservations_services WHERE service_id = 1;

-- Получение суммы всех броней пользователя
SELECT SUM(sum) FROM reservations WHERE user_id = 1;

*************************
Обновление данных (UPDATE)
*************************

-- Обновление стоимости категории
UPDATE categories SET cost = 15.5 WHERE id = 1;

-- Обновление пароля пользователя
UPDATE users SET password = 'new_password' WHERE id = 1;

*************************
Удаление данных (DELETE)
*************************

-- Удаление категории
DELETE FROM categories WHERE name = 'premium';

-- Удаление отзывов пользователя
DELETE FROM reviews WHERE user_id = 2;